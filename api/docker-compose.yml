version: '3'

services:
  db_postgres:
    networks:
      - gobarber
    restart: on-failure
    image: postgres:12.1-alpine
    container_name: 'postgres_gobarber'
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD:docker
      - POSTGRES_DB=gobarber
    volumes:
      - './src/database/postgres:/var/lib/postgresql/data'
    ports:
      - 5432:5432

  db_mongo:
    container_name: mongo_gobarber
    image: mongo:3.4.21-xenial
    ports:
      - 27017:27017
    networks:
      - gobarber
    restart: on-failure
    volumes:
      - './src/database/mongo:/var/lib/mongodb/data'

  db_redis:
    container_name: redis_gobarber
    image: redis:alpine
    # command: redis-server --requirepass Redis2019!
    ports:
      - '6379:6379'
    networks:
      - gobarber
    restart: on-failure
    volumes:
      - './src/database/redis:/var/lib/redis/data'

  api_node:
    build: .
    networks:
      - gobarber
    links:
      - db_postgres
      - db_mongo
      - db_redis
    depends_on:
      - db_postgres
      - db_mongo
      - db_redis
    container_name: 'node_gobarber'
    volumes:
      - .:/usr/app
    ports:
      - 3333:3333
    command: 'sh /usr/app/start.sh'
  # env_file: .dockerenv

networks:
  gobarber:
